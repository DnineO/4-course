<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0050)http://k46.aanet.ru/textbooks/std_pro/index2_4.htm -->
<HTML><HEAD><TITLE>Стандартизация процессов обеспечения качества программного обеспечения</TITLE>
<META content="text/html; charset=windows-1251" http-equiv=Content-Type><!-- Meta http equivalent was here                                     -->
<META content=ru http-equiv=Content-Language>
<META content="MSHTML 5.00.2614.3500" name=GENERATOR></HEAD>
<BODY 
background="Стандартизация процессов обеспечения качества программного обеспечения10.files/gutxt.jpg">
<TABLE border=0 cellPadding=0 cellSpacing=0 width="14%">
  <TBODY>
  <TR>
    <TD><A href="http://k46.aanet.ru/textbooks/std_pro/index2_3.htm" 
      target=_top><IMG alt=Назад border=0 height=31 
      src="Стандартизация процессов обеспечения качества программного обеспечения10.files/back.gif" 
      width=61></A></TD>
    <TD><A href="http://k46.aanet.ru/textbooks/std_pro/index.htm" 
      target=_top><IMG alt=Оглавление border=0 height=36 
      src="Стандартизация процессов обеспечения качества программного обеспечения10.files/up.gif" 
      width=74></A></TD>
    <TD><A href="http://k46.aanet.ru/textbooks/std_pro/index2_5.htm" 
      target=_top><IMG alt=Вперед border=0 height=31 
      src="Стандартизация процессов обеспечения качества программного обеспечения10.files/forward.gif" 
      width=61></A></TD></TR></TBODY></TABLE>
<BLOCKQUOTE>
  <P align=left><FONT size=4><A name=_Toc436536168><FONT 
  face="Times New Roman, Times, serif" size=3><B>2.4 </B></FONT></A></FONT><FONT 
  face="Times New Roman, Times, serif" size=3><B>Процессы жизненного цикла 
  разработки ПО</B></FONT></P><FONT size=4></FONT><FONT 
  face="Times New Roman CYR" size=4>
  <P align=justify><FONT face="Times New Roman, Times, serif" size=3>ИСО/МЭК 
  12207-95 определяет модель жизненного цикла процессов разработки программного 
  обеспечения. Данная модель жизненного цикла ПО определяет, на верхнем уровне, 
  фундаментальные цели, которые являются существенными для разработки 
  высокоэффективного и надежного программного обеспечения. Цели верхнего уровня 
  описывают то, что должно быть достигнуто, а не как их достигнуть.<BR>Жизненный 
  цикл, определенный данным стандартом, применим в любой software-организации, 
  желающей утвердить, а в последствии и улучшить возможности по поставке, 
  разработке, эксплуатации, развитии и поддержке программного обеспечения. 
  Модель не предполагает использование специфических организационных структур, 
  философии управления, технологии или методологии разработки ПО.<BR>Архитектура 
  данной модели организует процессы для помощи персоналу организации в их 
  понимании и их использования для непрерывного усовершенствования процессов 
  разработки программного обеспечения. Процессы, определенные в стандарте, 
  образуют всеобъемлющий набор процессов. Организация, в зависимости от своих 
  целей и для их реализации, может выбрать соответствующий поднабор. Поэтому 
  стандарт разработан так, чтобы быть приспособленным как для отдельной 
  организации, так и для конкретного проекта или приложения. Кроме того, он 
  может использоваться в случаях, когда программное обеспечение является 
  самостоятельной сущностью, встраивается или является составной частью общей 
  системы.<BR>ИСО/МЭК 12207 не поддерживает (не устанавливает) какую-либо 
  конкретную модель жизненного цикла программного обеспечения, управление 
  программным обеспечением, метод разработки или локальную промышленную 
  технологию. Еще раз повторим, что он также не предписывает, каким образом 
  исполнять что-либо. Эти моменты очень сильно зависят от условий конкретного 
  проекта и технологического уровня организации и остаются в ее 
  компетенции.<BR>Данный стандарт сильно связан со следующими стандартами, 
  которые будут рассмотрены нами ниже.&nbsp;<BR>ИСО/МЭК 15504, <I>Информационная 
  технология - Оценка процесса разработки программного обеспечения;</I><BR>ИСО 
  9001: 1994, <I>Системы качества - Модель для обеспечения качества при 
  проектировании, разработке, производстве, монтаже и обслуживании.</I><BR>Все 
  действия, которые могут осуществляться в процессе жизненного цикла ПО, 
  рассматриваемый стандарт разбивает на три группы процессов жизненного цикла, 
  согласно типу действия, которым они направляются. Каждый процесс жизненного 
  цикла подразделяется на ряд действий. Каждое действие, в свою очередь, 
  подразделяется на ряд задач. Под задачей понимается действие, преобразующее 
  входы в выходы. Перечень задач, приведенный ниже, не является исчерпывающим и 
  приведен в качестве примера. Процессы, действия, и задачи могут выполняться 
  последовательно, параллельно, повторно и комбинировано. </FONT></P></FONT>
  <P align=justify><FONT face="Times New Roman, Times, serif" size=3><B>Основные 
  процессы.</B> Раздел 5 ИСО/МЭК 12207 определяет, что основными процессами 
  являются:<BR><B>1</B>. Процесс приобретения. Определяет действия заказчика, 
  организации, приобретающего систему или программный продукт.<BR><B>2.</B> 
  Процесс поставки. Определяет действия поставщика, организации, предоставляющей 
  программный продукт заказчику.<BR><B>3</B>. Процесс разработки. Определяет 
  действия разработчика, организации, определяющей и разрабатывающей программный 
  продукт.<BR><B>4</B>. Процесс эксплуатации. Определяет действия оператора, 
  организации, предоставляющей для пользователей услуги по эксплуатации 
  компьютерной системы в ее рабочей среде.<BR><B>5</B>. Процесс сопровождения. 
  Определяет действия сопровождающего, организации, предоставляющей услуги по 
  сопровождению программного обеспечения; т.е., управлению изменениями в 
  программном обеспечении для поддержки его в актуальном и работоспособном 
  состоянии. Этот процесс включает перемещение и отставку программного 
  обеспечения.<BR><B>Сопроводительные процессы. </B>Раздел 6 данного стандарта 
  представляет собой соединение восьми процессов. Сопроводительный процесс 
  поддерживает работу других процессов как единое целое с четко определенной 
  целью и способствует успеху и качеству проекта. Сопроводительный процесс 
  используется, как правило, другими процессами. Сопроводительные 
  процессы:<BR><B>1. Процесс документирования. Определяет действия для записи 
  информации, происходящие во время жизненного цикла.<BR>2. Процесс управления 
  конфигурацией. Определяет действия по управлению конфигурацией.<BR>3. Процесс 
  гарантии качества. Определяет действия, обеспечивающие гарантию того, что 
  программные продукты соответствуют определенным для них требованиям и 
  придерживаются установленных планов.<BR>4. Процесс верификации. Определяет 
  действия (для заказчика, поставщиков или независимой стороны) по верификации 
  программных продуктов различной глубины, в зависимости от конкретного проекта 
  ПО.<BR>5. Процесс аттестации. Определяет действия (для заказчика, поставщиков 
  или независимой стороны) для аттестации программных продуктов проекта.<BR>6. 
  Процесс общего обзора. Определяет действия оценки статуса и качества 
  продуктов. Этот процесс может быть использован любыми из двух сторон, где одна 
  сторона (проверяющая) проверяет другую сторону (проверяемую).<BR>7. Процесс 
  аудита. Определяет действия для установления согласия с требованиями, планами 
  и контрактами. Этот процесс может быть использован двумя сторонами, где одна 
  сторона (аудитор) проводит аудит программных продуктов или действий другой 
  стороны (подвергающейся аудиту).<BR>8. Процесс разрешения проблем. Определяет 
  действия для анализа и устранения проблем (включая несогласие), природа или 
  источник которых обнаружены в течение разработки, эксплуатации, сопровождения 
  или других процессов.</B></FONT></P>
  <P align=justify><FONT face="Times New Roman, Times, serif" 
  size=3><B>Организационные процессы. </B>Раздел 7 ИСО/МЭК 12207 состоит из 
  четырех процессов. Они используются организацией на верхнем уровне для 
  установления, выполнения и усовершенствовании нижележащей структуры, 
  построенной на связи процессов жизненного цикла и личностей организации. 
  Обычно они используются вне сферы конкретных проектов и контрактов; однако 
  уроки, извлеченные из этих проектов и контрактов, способствуют 
  усовершенствованию организации. Организационные процессы:<BR><B>1</B>. Процесс 
  управления. Определяет основные действия по управлению, включая управление 
  проектом, в течение процессов жизненного цикла.<BR><B>2</B>. Процесс 
  инфраструктуры. Определяет основные действия на установления нижележащей 
  структуры процесса.<BR><B>3</B>. Процесс усовершенствования. Определяет 
  основные действия, выполняемые организацией (заказчиком, поставщиком, 
  разработчиком, эксплуатирующей, сопровождающей организацией или менеджером 
  другого процесса) для установления, оценки, проверки и совершенствования 
  процессов жизненного цикла.<BR><B>4</B>. Процесс обучения. Определяет действия 
  по обеспечению соответственно подготовленного персонала.<BR>Кратко рассмотрим 
  перечисленные выше процессы. <BR><B>5.1Приобретение</B><BR>Процесс 
  приобретения содержит действия и задачи заказчика. Процесс начинается с 
  определения потребностей в приобретении системы или программных продуктов, 
  продолжается подготовкой и выпуском заявок на предложение, выбором поставщика 
  и управлением процесса приобретения посредством принятия программного 
  продукта.<BR>Заказчик управляет процессом приобретения на уровне проекта в 
  соответствии с процессом управления (7.1), который подтверждается примерами в 
  этом процессе, закладывает инфраструктуру в процессе согласно процессу 
  инфраструктуры (7.2); подгоняет процесс для проекта согласно процессу подгонки 
  и управляет процессом на организационном уровне согласно процессу 
  усовершенствования (7.3).<BR><U>Перечень действий: </U>Этот процесс содержит 
  следующие действия:<BR><I>инициализация;<BR>подготовка заявки_для_ 
  предложения;<BR>подготовка контракта и корректировка;<BR>поиск 
  поставщиков;<BR>принятие и заключение.</I></FONT></P><FONT 
  face="Times New Roman CYR" size=4>
  <P align=justify><FONT face="Times New Roman, Times, serif" size=3><B>5.1.1 
  Инициализация.<BR></B>Это действие состоит из следующих основных 
  задач:<BR>Заказчик начинает процесс приобретения, выявляя идею или 
  необходимость приобретения, разработки или усиления системы или программного 
  продукта.<BR>Заказчик должен определить и анализировать системные требования. 
  Системные требования должны включать безопасность, надежность и другие 
  критичные требования, касающиеся проектирования, тестирования и согласованными 
  со стандартами и процедурами. Если заказчик приглашает поставщика для 
  исполнения анализа требований системы, он должен одобрить проанализированные 
  требования. Заказчик может выполнить установление требований к программному 
  продукту самостоятельно или может пригласить поставщика для выполнения этой 
  задачи. Процесс разработки (5.3) может быть использован для выполнения задач, 
  указанных выше.<BR>Заказчик будет обсуждать варианты приобретения, анализируя 
  риск при каждом варианте. Варианты включают:<BR>приобретение готового к 
  использованию программного продукта, удовлетворяющего 
  требованиям;<BR>разработка программного продукта самостоятельно<BR>разработка 
  программного продукта через контракт<BR>комбинация перечисленных выше 
  вариантов.<BR>усовершенствование существующего программного 
  продукта.<BR>Заказчик должен подготовить план приобретения, определяющий 
  соответственно требования к планируемому использованию системы, тип контракта, 
  который будет использован, обязанности привлеченных организаций, концепцию 
  поддержки, которая будет использована, и риски, принимаемые во внимание, также 
  методы управления рисками. План должен быть зарегистрирован и 
  выполнен.<BR>Аквизитор должен определить и зарегистрировать стратегию приемки 
  и условия (критерии). </FONT></P>
  <P align=justify><FONT face="Times New Roman, Times, serif" size=3><B>5.1.2 
  Подготовка заявки для предложения (тендера).<BR></B>Эта деятельность содержит 
  следующие задачи.<BR>Заказчик должен зарегистрировать требования приобретения 
  (например, заявку на участие), содержание которых зависит от варианта, 
  выбранного при выполнение предыдущего действия. Документация должна включать 
  требования системы, формулировку работы, инструкции для покупателей, перечень 
  программных продуктов, статьи договора, статьи поддоговора, технические 
  ограничения (например, среда использования).<BR>Заказчик должен определить, 
  какие процессы, действия и задачи стандарта относятся к проекту и должны быть 
  соответственно подогнаны. Особо заказчик должен определить приемлемые 
  сопроводительные процессы (6) и их выполняющие организации, так что поставщики 
  могут в своих целях определить подход к каждому из определенных 
  сопроводительных процессов.<BR>Документация также должна определять точки 
  контракта, на которых будут рассматриваться и проверяться действия поставщика, 
  как часть мониторинга (6.6 и 6.7). Требования по приобретению должны быть даны 
  организации, выбранной для исполнения этих действий.<BR>Остальные действия 
  этого процесса касаются требований к подготовке контракта, его корректировка, 
  выполнению и завершению и здесь не рассматриваются. </FONT></P>
  <P align=justify><FONT face="Times New Roman, Times, serif" size=3><B>5.2 
  Процесс поставки.<BR></B>Процесс поставки содержит действия и задачи 
  поставщика. Процесс может быть инициирован, как принятием решения подготовить 
  предложения в ответ на объявленный заказчиком тендер, так и подписанием и 
  вступлением в силу контракта с заказчиком по предоставлению программного 
  продукта. Процесс продолжается идентификацией процедур и ресурсов, необходимых 
  для управления и обеспечения проекта, включая разработку планов проекта и 
  выполнение планов поставки программного продукта аквизитору.<BR><U>Перечень 
  действий:</U> Этот процесс состоит из следующих действий: введение, подготовка 
  ответа, контракт, планирование, исполнение и контроль, обзор и оценка, 
  поставка и заключение. </FONT></P>
  <P align=justify><FONT face="Times New Roman, Times, serif" size=3><B>5.3 
  Процесс разработки<BR></B>Процесс разработки содержит действия и задачи 
  разработчика. Процесс содержит действия для анализа требований, 
  проектирования, программирования, интеграции, тестирования и инсталляции и 
  приемки, относящейся к программному обеспечению. Он может содержать системные 
  действия, если это оговаривается в контракте.<BR>Разработчик руководит 
  процессом разработки на уровне проекта согласно процессу управления (7.1), 
  который сопровождается примерами в этом процессе; представляет инфраструктуру 
  процесса согласно процессу инфраструктуры (7.2); доводит процесс для проекта, 
  следуя процессу доводки, и руководит процессом на организационном уровне, 
  следуя процессу усовершенствования (7.3).<BR><U>Перечень действий: </U>Этот 
  процесс состоит из следующих видов деятельности.<BR>1. Инструментарий процесс. 
  Это действие состоит из следующих задач:<BR>Если не оговорено в контракте, 
  разработчик должен определить или выбрать модель жизненного цикла программного 
  обеспечения в соответствии с назначением, значимостью и сложностью проекта. 
  Действия и задачи этого процесса должны быть выбраны и отображены в модели 
  жизненного цикла. Эти действия и задачи могут перекрываться или 
  взаимодействовать и могут быть исполнены итеративно или 
  рекурсивно.<BR>Разработчик должен выполнять следующее:<BR>документировать 
  результаты в соответствии с процессом документирования (раздел 
  6.1);<BR>разместить результаты (выходы) в процессе конфигурации (6.2) и 
  выполнить контроль изменений в соответствии с этим;<BR>документировать и 
  разрешить проблемы и несоответствия, найденные в программном продукте и 
  задачах в соответствии с процессом разрешения проблем (6.8);<BR>другие 
  сопроводительные процессы (6), как определено в контракте.<BR>Разработчик 
  должен выбрать, довести и использовать внутренние стандарты, методологии, 
  процедуры и языки программирования (если это не оговорено в контракте), 
  которые должны быть зарегистрированы, соответствуют и установлены организацией 
  для исполнения действий процесса разработки и процесса 
  поддержки.<BR>Разработчик должен разработать планы управления действиями в 
  процессе разработки. Планы должны включать особые стандарты, методы, средства, 
  действия и обязанности, связанные с разработкой и квалификацией всех 
  требований, включая надежность и безопасность. Эти планы должны быть 
  зарегистрированы и исполнены.<BR>Официально непоставляемые элементы могут быть 
  использованы в разработке или сопровождении программного обеспечения. Однако 
  должна быть гарантия того, что эксплуатация и поддержка поставляемого 
  программного обеспечения после его поставки заказчику не зависит от таких 
  элементов, другими словами, эти элементы становятся официально поставляемыми. 
  <BR><B>2</B>. Анализ системных требований. Это действие состоит из следующих 
  задач, которые разработчик должен исполнить или поддерживать, как требуется по 
  контракту.<BR>Особое предполагаемое использование разрабатываемых систем 
  должно быть проанализировано для определения системных требований. 
  Спецификация системных требований должна описывать: функции и возможности 
  системы; надежность, защиту, разработку, интерфейс требования по эксплуатации 
  и поддержке; ограничения проектирования и квалификационные требования. 
  Спецификации системных требований должны быть зарегистрированы.<BR>Системные 
  требования должны быть оценены с позиций следующих критериев: прослеживаемость 
  потребностей заказчика, согласованность с потребностями заказчика, 
  тестируемость, выполнимость системного проектирования, осуществимость 
  эксплуатации и поддержки.<BR><B>3</B>. Системное проектирование. Это действие 
  состоит из следующих задач, которые разработчик должен выполнить или 
  поддерживать, как требуется контрактом.<BR>Должна быть представлена 
  архитектура верхнего уровня системы. Архитектура должна определять элементы 
  аппаратного, программного обеспечения и ручные операции. Должна быть гарантия 
  того, что все системные требования полностью распределены среди элементов. Эти 
  элементы должны быть впоследствии определены как элементы аппаратной 
  конфигурации (ЭАК), элементы конфигурации программного обеспечения (ЭКПО) и 
  соответственно ручные операции. Архитектура системы и системные требования, 
  распределенные между элементами аппаратной, конфигурации, конфигурации ПО и 
  ручными операциями, должны быть зарегистрированы.<BR>Архитектура системы и 
  требования для элементов конфигурации и ручных операций должны быть оценены в 
  соответствии со следующими критериями:<BR><I>различимость системных 
  требований;<BR>согласованность с системными требованиями;<BR>соответствие 
  стандартам и используемым методам проектирования;<BR>осуществимость наполнения 
  элементов конфигурации ПО распределенными для них 
  требованиями;<BR>выполнимость эксплуатации и поддержки.</I><BR><B>4</B>. 
  Анализ требований к программному обеспечению. Для каждого ЭКПО это действие 
  состоит из следующих задач, которые разработчик должен 
  исполнить.<BR>Разработчик должен представить и зарегистрировать требования к 
  программному обеспечению, включая спецификации характеристик качества, 
  описанных ниже:<BR>спецификации функций и возможности, включая исполнение, 
  физические характеристики, условия окружающей среды, при которых выполняется 
  программное обеспечение;<BR>внешний интерфейс ЭКПО;<BR>квалификационные 
  требования;<BR>спецификации безопасности, включая относящиеся к методами 
  эксплуатации и поддержки, влиянию окружающей среды и повреждению 
  персоналом;<BR>спецификации защиты, включая касающиеся особой информации и 
  материалов;<BR>человеческий фактор и спецификации человеко-машинного 
  взаимодействия, включая относящиеся к ручным операциям, человеко-машинным 
  взаимодействиям, ограничениям на персонал и области, требующие концентрации 
  человеческого внимания, чувствительные с точки зрения ошибок человека и его 
  опыта;<BR>требования определения данных и требования к базам 
  данных;<BR>требования по инсталляции и приемке поставляемого программного 
  обеспечения в эксплуатацию и сопровождение;<BR>документация 
  пользователя;<BR>требования по эксплуатации пользователя и 
  исполнению;<BR>требования по пользовательскому сопровождению.<BR>Руководство 
  по определению характеристик качества может быть найдено в ИСО/МЭК 
  9126.<BR>Разработчик должен оценить требования к программному обеспечению, 
  руководствуясь приведенными ниже критериями:<BR>прослеживаемость системных 
  требований и системного проекта;<BR>внешняя согласованность с системными 
  требованиями;<BR>внутренняя согласованность;<BR>тестовое покрытие 
  требований;<BR>тестируемость;<BR>выполнимость проектирования программного 
  обеспечения;<BR>осуществимость эксплуатации и сопровождения.<BR>Разработчик 
  должен руководить общим обзором в соответствии с 6.6. После успешного 
  завершения обзора должна быть представлена основа для требований к 
  ЭКПО.<BR><B>5</B>. Проектирование программного обеспечения. Для каждого ЭКПО 
  это действие состоит из следующих задач, которые разработчик должен быть 
  выполнить.<BR>Разработчик должен преобразовать требования для ЭКПО в 
  архитектуру, описывающую структуру его верхнего (высшего) уровня и 
  определяющую главные компоненты. Должна быть гарантия того, что требования к 
  ЭКПО полностью распределены между его компонентами и далее уточнены для 
  облегчения детального проектирования. <BR>Разработчик должен разработать и 
  зарегистрировать:<BR>проект высшего уровня для внешнего взаимодействия с ЭКПО 
  и между компонентами программного обеспечения;<BR>проект высшего уровня для 
  баз данных;<BR>предварительные версии руководства для 
  пользователя;<BR>предварительные тестовые требования и план интеграции 
  программного обеспечения.<BR>Разработчик должен оценить архитектуру ЭКПО и 
  проекты интерфейса и баз данных, руководствуясь приведенными ниже 
  критериями:<BR>прослеживаемость требований к ЭКПО;<BR>внешняя согласованность 
  с требованиями к ЭКПО;<BR>внутренняя согласованность между 
  компонентами;<BR>соответствие методов проектирования и стандартов, которые 
  были использованы; <BR>выполнимость детализированного 
  проектирования<BR>осуществимость эксплуатации и сопровождения.<BR>Разработчик 
  должен руководить общим обзором в соответствии с 6.6.<BR><B>6</B>. Детальное 
  проектирование программного обеспечения. Для каждого ЭКПО это действие состоит 
  из следующих задач, которые разработчик должен выполнить.<BR>Разработчик 
  должен разработать детальный проект для каждого компонента программного 
  обеспечения ЭКПО. Компоненты программного обеспечения должны быть уточнены на 
  нижних уровнях, содержащих модули программного обеспечения, которые могут 
  кодироваться, компилироваться и тестироваться. Должна быть гарантия того, что 
  требования к программному обеспечению полностью локализованы в модулях 
  программного обеспечения. Детализированный проект должен быть 
  зарегистрирован.<BR>Разработчик должен разработать и задокументировать 
  детальный проект для внешнего интерфейса ЭКПО между компонентами программного 
  обеспечения и между модулями программного обеспечения. Детальный проект 
  интерфейса должен позволять писать код программы без необходимости в 
  дополнительной информации.<BR>Разработчик должен разработать и 
  зарегистрировать детальный проект базы данных.<BR>Разработчик должен обновить 
  руководство пользователя насколько это необходимо.<BR>Разработчик должен 
  определить и задокументировать тестовые требования и расписание тестирования 
  блоков программного обеспечения. Тестовые требования должны включать испытания 
  программного обеспечения на пределе требований. <BR>Разработчик должен 
  обновить тестовые требования и расписание интеграции программного 
  обеспечения.<BR>Разработчик должен оценить детальный проект программного 
  обеспечения и тестовые требования с точки зрения критериев, приведенных 
  ниже:<BR><I>прослеживаемость требований ЭКПО;</I><BR><I>внешняя 
  согласованность с архитектурой проекта;</I><BR><I>внутренняя согласованность 
  между компонентами и модулями;</I><BR><I>соответствие методов проектирования и 
  используемых стандартов;</I><BR><I>выполнимость 
  тестирования;</I><BR><I>выполнимость эксплуатации и 
  сопровождения.</I><BR>Разработчик должен руководить объединением согласно 
  6.6.<BR><B>7</B>. Программирование и отладка. Для каждого ЭКПО это действие 
  состоит из следующих задач, которые должен выполнить 
  разработчик.<BR>Разработчик должен разработать и задокументировать 
  следующее:<BR>а) каждый модуль программного обеспечения и базы данных;<BR>б) 
  процедуры тестирования и данные для тестирования каждого модуля и базы 
  данных.<BR>Разработчик должен тестировать каждый модуль ПО и базы данных, 
  убеждаясь в том, что они удовлетворяют требованиям. Результаты тестирования 
  должны быть задокументированы.<BR>Разработчик должен обновить руководство 
  пользователя, тестовые требования и расписание интеграции ПО, оценить код ПО и 
  результаты теста в соответствии с критериями, приведенными 
  ниже:<BR><I>прослеживаемость требований ЭКПО и проекта;</I><BR><I>внешняя 
  согласованность с требованиями ЭКПО и архитектурой 
  проекта;</I><BR><I>внутренняя согласованность между требованиями 
  модулей;</I><BR><I>тестирование модулей;</I><BR><I>соответствие методов 
  кодирования и используемых стандартов;</I><BR><I>выполнимость интеграции ПО и 
  тестирования;</I><BR><I>выполнимость эксплуатации и 
  сопровождения.</I><BR><B>8</B>. Интеграция программного обеспечения. Для 
  каждого ЭКПО это действие состоит из следующих задач, которые должен выполнить 
  разработчик.<BR>Разработчик должен разработать план интеграции для объединения 
  модулей ПО и компонентов в ЭКПО. План должен включать требования, процедуры, 
  данные, ответственность и расписание. <BR>Разработчик должен объединить модули 
  ПО и компоненты. Должна быть гарантия того, что каждый компонент удовлетворяет 
  требованиям SCI и что SCI полностью интегрирован как результат этой 
  деятельности. Интеграция и результаты теста должны быть задокументированы. 
  <BR>Разработчик должен обновить руководство пользователя, если это 
  требуется.<BR>Разработчик должен разработать и задокументировать для каждого 
  квалификационного требования ЭКПО полный набор тестов, ситуаций (вход, выход, 
  критерии тестирования) и процедуры тестирования для управления 
  квалификационным тестированием ПО.<BR>Разработчик должен оценить план 
  интеграции, проект, код, тесты, результаты тестирования и руководства 
  пользователя с точки зрения критериев, приведенных ниже:<BR><I>отслеживаемость 
  системных требований;</I><BR><I>внешняя согласованность с системными 
  требованиями; </I><BR><I>внутренняя согласованность; </I><BR><I>тестирование 
  ЭКПО требований;</I><BR><I>соответствие используемых стандартов и методов 
  тестирования;</I><BR><I>соответствие с ожидаемыми 
  результатами;</I><BR><I>выполнимость квалификационного тестирования 
  ПО;</I><BR><I>выполнимость эксплуатации и сопровождения.</I><BR>Разработчик 
  должен руководить общим обзором в соответствии с 6.6.<BR><B>9.</B> 
  Квалификационное тестирование программного обеспечения. Для каждого ЭКПО это 
  действие состоит из следующих задач, которые должен выполнить 
  разработчик:<BR>Разработчик должен руководить квалификационным тестированием в 
  соответствии с квалификационными требованиями, особыми для ЭКПО. Должно быть 
  гарантировано, что реализация каждого требования к ПО полностью 
  протестирована. Результаты квалификационного тестирования должны быть 
  зарегистрированы.<BR>Разработчик должен оценить проект, код, тесты, результаты 
  тестирования и руководство пользователя в соответствии с приведенными ниже 
  критериями:<BR><I>тестирование требований к ЭКПО;</I><BR><I>согласованность с 
  ожидаемыми результатами;</I><BR><I>выполнимость системной интеграции и 
  тестирования;</I><BR><I>выполнимость эксплуатации и 
  сопровождения.</I><BR>Разработчик должен поддерживать аудит в соответствии с 
  6.7. Результаты аудита должны быть задокументированы. Если разрабатываются или 
  интегрируются ПО и аппаратное обеспечение, аудит может быть отложен до 
  квалификационного тестирования системы.<BR>После успешного завершения аудита, 
  если предписано, разработчик должен:<BR>а) обновить и подготовить к поставке 
  ПО для системной интеграции, квалификационного тестирования системы, 
  инсталляции или поддержки приема ПО, как полагается;<BR>б) представить 
  основную линию проектирования и кодирования ЭКПО;<BR><B>10. </B>Системная 
  интеграция. Это действие состоит из следующих задач, которые должен выполнить 
  разработчик. <BR>ЭКПО должен быть интегрирован с ЭАК, руководством по 
  эксплуатации и другими системами в единую систему. Составляющие должны быть 
  протестированы на соответствие требованиям. Интеграция и результаты 
  тестирования должны быть задокументированы.<BR>Для каждого квалификационного 
  требования к системе должны быть разработаны и задокументированы полный набор 
  тестов, ситуаций (входных, выходных, критериев тестирования), процедур 
  тестирования. Разработчик должен гарантировать, что интегрированная система 
  готова для квалификационного тестирования.<BR>Интегрированная система должна 
  быть оценена в соответствии с приведенными ниже критериями:<BR><I>зона 
  тестирования требований к системе;</I><BR><I>приемлемость используемых методов 
  и стандартов тестирования;</I><BR><I>согласованность с ожидаемыми 
  результатами;</I><BR><I>выполнимость квалификационного тестирования 
  системы;</I><BR><I>выполнимость эксплуатации и 
  сопровождения.</I><BR><B>11</B>. Квалификационное тестирование системы. Это 
  действие состоит из следующих задач, выполняемых 
  разработчиком.<BR>Квалификационное тестирование системы должно 
  руководствоваться в соответствии с квалификационными требованиями, 
  определенными для системы. Должно быть гарантировано, что выполнение каждого 
  требования к системе протестировано полностью и система готова к поставке. 
  Результаты квалификационного тестирования должны быть 
  задокументированы.<BR>Система должна быть оценена в соответствии с 
  приведенными ниже критериями:<BR><I>зона тестирования требований к 
  системе;</I><BR><I>подтверждение ожидаемыми 
  результатами;</I><BR><I>выполнимость эксплуатации и 
  сопровождения.</I><BR>Разработчик должен поддерживать аудит в соответствии с 
  6.7. Результаты аудита должны быть задокументированы. Этот пункт не 
  применяется к таким ЭКПО, для которых аудит был выполнен ранее.<BR>После 
  успешного завершения аудита, если предписано, разработчик должен:<BR>обновить 
  и подготовить к поставке ЭКПО для инсталляции ПО и его приемки;<BR>обосновать 
  основные направления для проектирования и кодирования ЭКПО.<BR><B>12. 
  </B>Инсталляция ПО. Это действие состоит из следующих задач, выполняемых 
  разработчиком.<BR>Разработчик должен разработать план инсталляции ПО в 
  намеченную среду. Ресурсы и информация, необходимые для установки ПО, должны 
  быть определены и доступны. Разработчик должен помогать поставщику при 
  установке. После того, как ПО установлен в существующую систему, Разработчик 
  должен поддерживать некоторые параллельно выполняемые действия. План установки 
  должен быть задокументирован.<BR>Разработчик должен установить ПО в 
  соответствии с планом установки. Должно быть гарантировано, что ПО и базы 
  данных инициализируются, функционируют и прекращают работу, как указано в 
  контракте. Процесс установки и результаты должны быть 
  задокументированы.<BR><B>12.</B> Поддержка приемки ПО. Это действие состоит из 
  следующих задач, выполняемых разработчиком.<BR>Разработчик должен поддерживать 
  процесс приемки поставщиком и тестирование ПО. Приемка и тестирование должны 
  основываться на общем обзоре, аудите, квалификационном тестировании, 
  квалификационном тестировании системы (если оно выполнялось). Результаты 
  приемки и тестирования должны быть задокументированы.</FONT></P>
  <P align=justify><FONT face="Times New Roman, Times, serif" size=3><B>5.4 
  Процесс эксплуатации<BR></B>Процесс эксплуатации состоит из действий и задач 
  того, кто эксплуатирует разработанное ПО. Процесс включает эксплуатацию ПО и 
  поддержку пользователей. Поскольку эксплуатация ПО является интеграционной 
  составляющей эксплуатации системы, действия и задачи этого процесса относятся 
  и к системе.<BR>Оператор управляет процессом эксплуатации на уровне проекта, 
  следуя процессу управления (7.1), являющемуся примером; представляет 
  инфраструктуру процесса, согласно процессу инфраструктура (7.2); подстраивает 
  процесс для проекта согласно процессу подгонки; руководит процессом на 
  организационном уровне согласно процессу усовершенствования 
  (7.3).<BR><U>Перечень действий</U>. Этот процесс состоит следующих задач: 
  выполнения процесса, тестирование, эксплуатация системы и поддержка 
  пользователей</FONT></P>
  <P align=justify><FONT face="Times New Roman, Times, serif" size=3><B>5.5 
  Процесс сопровождения</B><BR>Процесс поддержки состоит из действий и задач 
  лица, выполняющего сопровождение. Этот процесс начинается, когда необходима 
  модификация из-за допущенных ошибок, неучтенных проблем, необходимости 
  усовершенствования или адаптации кода ПО и соответствующей документации. Его 
  цель - модифицировать существующее ПО, сохранив его целостность. Этот процесс 
  включает распространение и замену ПО. Процесс завершается заменой 
  ПО.<BR>Действия, обеспечиваемые этим разделом, определены как процесс 
  сопровождения, однако процесс может использовать другие процессы этого 
  стандарта. Если используется процесс разработки (5.3), термин 
  <I>разработчик</I> интерпретируется как <I>обеспечивающий сопровождение. 
  </I>Обеспечивающий сопровождение руководит процессом сопровождении на уровне 
  проекта, следуя процессу управления (7.3).<BR><U>Перечень действий. 
  </U>Процесс состоит из следующих действий: процесс реализации, анализ проблем 
  и модификации, реализация модификации, приемка, распространение, замена 
  ПО.<BR>В силу ограниченности объема данного учебного пособия, остальные 
  процессы жизненного цикла ПО, установленные в ИСО/МЭК 12207, рассматривать не 
  будем. </FONT></P></FONT></BLOCKQUOTE>
<TABLE border=0 cellPadding=0 cellSpacing=0 width="14%">
  <TBODY>
  <TR>
    <TD><A href="http://k46.aanet.ru/textbooks/std_pro/index2_3.htm" 
      target=_top><IMG alt=Назад border=0 height=31 
      src="Стандартизация процессов обеспечения качества программного обеспечения10.files/back.gif" 
      width=61></A></TD>
    <TD><A href="http://k46.aanet.ru/textbooks/std_pro/index.htm" 
      target=_top><IMG alt=Оглавление border=0 height=36 
      src="Стандартизация процессов обеспечения качества программного обеспечения10.files/up.gif" 
      width=74></A></TD>
    <TD><A href="http://k46.aanet.ru/textbooks/std_pro/index2_5.htm" 
      target=_top><IMG alt=Вперед border=0 height=31 
      src="Стандартизация процессов обеспечения качества программного обеспечения10.files/forward.gif" 
      width=61></A></TD></TR></TBODY></TABLE></BODY></HTML>
