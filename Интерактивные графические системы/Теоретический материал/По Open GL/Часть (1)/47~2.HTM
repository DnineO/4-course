<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=win-1251">
</head>
<body text=black bgcolor=white link=blue vlink=blue alink=red>
<link rel=stylesheet type=text/css href=../../1.css>
<font color=red><h2 align=center>Шаг 47 - Буффер трафарета.</h2></font>
Итак, все пиво выпито, пора работать.
<p>Делаем стандартный проект. Убираем из него всякие функции генерации списков и прочую ерунду. Функция <b>Draw</b> теперь будет выглядеть так:
<pre>
GLvoid Draw()
{
	glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
	glPushMatrix();
	DrawPrim();
	glPopMatrix();
	SwapBuffers(hDC);
}
</pre>
Здесь, как вы видите, к функции <b>glClear</b> добавился еще один флаг - очистка буффера трафарета.
Кстати буфер трафарета надо включить. Сделать это удобно в <b>StartRC()</b>:
<pre>	glEnable(GL_STENCIL_TEST);</pre>
и там же установить значение, которым будет заполняться буффер трафарета при очистке:
<pre>	glClearStencil(0);
	glStencilMask(1);</pre>
Еще пару слов о том что же такое этот буффер трафарета.
<p>По сути дела этот буффер представляет собой двумерный массив чисел (запомните!!! ДВУМЕРНЫЙ, а не трехмерный), который мы будем заполнять при рисовании. Информация в буффер кадра попадает после успешного прохождения буффера трафарета, поэтому если буффер трафарета не найден, то на экране вы ничего не увидите. По умолчанию буффер трафарета выключен, поэтому вся информация сразу же попадает в буффер кадра.
<p>Ну вот, теперь переходим к рисованию. Самое интересно будет происходить в функции <b>DrawPrim()</b>, перейдем туда:
<pre>
GLvoid DrawPrim()
{
	glStencilFunc(GL_ALWAYS, 2, 1);
	glStencilOp(GL_KEEP, GL_REPLACE, GL_KEEP);
	glColor3f(1.0f, 0.0f, 0.0f);
	glBegin(GL_POLYGON);
		glVertex3f(1.0f, 1.0f, 0.0f);
		glVertex3f(-1.0f, 1.0f, 0.0f);
		glVertex3f(-1.0f, -1.0f, 0.0f);
		glVertex3f(1.0f, -1.0f, 0.0f);
	glEnd();

	glStencilFunc(GL_NEVER, 1, 1);
	glStencilOp(GL_REPLACE, GL_KEEP, GL_KEEP);
	glColor3f(0.0f, 1.0f, 0.0f);
	glBegin(GL_POLYGON);
		glVertex3f(0.0f, 1.5f, 0.0f);
		glVertex3f(-1.5f, -1.5f, 0.0f);
		glVertex3f(1.5f, -1.5f, 0.0f);
	glEnd();

	glStencilFunc(GL_EQUAL, 2, 1);
	glStencilOp(GL_KEEP, GL_KEEP, GL_KEEP);
	glColor3f(0.0f, 0.0f, 1.0f);
	glBegin(GL_POLYGON);
		glVertex3f(0.0f, 2.0f, 0.0f);
		glVertex3f(-2.0f, -2.0f, 0.0f);
		glVertex3f(2.0f, -2.0f, 0.0f);
	glEnd();
}
</pre>
Первая команда определяет (как видно из названия) функцию буффера трафарета, т.е. она говорит как проводить тест буффера трафарета. Вторая команда говорит о том, что делать если буффер трафарета завершился каким-либо образом.  Первый аргумент говорит, что делать если буффер трафарета завершился неудачно, второй - если тест буффера трафарета  прошел, но не прошел тест буффера глубины, а третий - если все тесты прошли удачно.

<p>Давайте пройдем по шагам каждую команду.
<pre>	glStencilFunc(GL_ALWAYS, 2, 1);</pre>
Означает, что тест трафарета всегда заканчивается удачно и во все места, соответствующие пикселам квадрата в буффер трафарета записывается двоечка.
<pre>	glStencilOp(GL_KEEP, GL_REPLACE, GL_KEEP);</pre>
Этой командой мы говорим, что если буффер трафарета прошел удачно (буффер глубины нас сейчас не интересует), то заменить то значание, которое в данный момент лежит в буффере на то, которое задано вторым аргументом команды <b>glStencilFunc</b>.
<p>Далее рисуем квадрат.
<pre>	glStencilFunc(GL_NEVER, 1, 1);</pre>
Команда говорит о том, что тест трафарета всегда заканчивается неудачно.
<pre>	glStencilOp(GL_REPLACE, GL_KEEP, GL_KEEP);</pre>
В случае, если тест трафарета прошел с ошибкой  - заменить текущее (первый аргумент команды <b>glStencilOp</b>) значение на то, что указано 2-м аргументом в <b>glStencilFunc</b>, т.е. на 1.
<p>Далее рисуем треугольник.
<pre>	glStencilFunc(GL_EQUAL, 2, 1);</pre>
Это означает, что тест трафарета закончится удачно только если в буффере трафарета содержится цифра 2 (естественно на месте того пиксела, который должен быть нарисован)
<pre>	glStencilOp(GL_KEEP, GL_KEEP, GL_KEEP);</pre>
Говорит о том, что никакие изменения в буффере трафарета делать не надо.
<p>Рисуем еще один большой треугольник.
<p>Теперь соберите проект и посмотрите что получилось. Треугольник с дыркой, а посередине квадрат. Попробуйте теперь поменять в строке <b>glStencilFunc(GL_EQUAL, 2, 1)</b> 2-ку на 1-ку и проанализировать почему получилось именно так, а не иначе.
<p>Очень рекоммендую попробовать нарисовать свои примитивы и повырезать в них дырки. Буффер трафарета
достаточно часто используется в <b>OpenGL</b>, например, при постороении теней (для этого есть правда и менее энергоёмкие
способы, но о них потом). Поэтому хорошее понимание логики его работы позволит легко работать с ним в <b>3D</b>.
<p><hr><center><font size=2><a href=prog/47.zip>Загрузить проект</a> | <a href=46.html>Предыдущий шаг</a> <!--| <a href=.html>Следующий Шаг</a--> | <a href=opengl1.html>Оглавление</a></font></center>
<hr><center><font size=2>By <a href="mailto:kirill@scsc.ru@SUBJECT=OpenGLByStep">Kirill V. Ratkin</a>.</center></body></html>
