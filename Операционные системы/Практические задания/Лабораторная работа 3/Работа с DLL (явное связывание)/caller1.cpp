/************************************************************************
                          Лабораторная работа N3

                                Пример 2.

                               CALLER.CPP

       Тестовая программа для вызова функции из DLL (явное связывание)

************************************************************************/
#include <windows.h>

// Поскольку вызов функции при явном связывании происходит по ее указателю,
// то необходим указатель на функцию, имеющую тот же тип, что и функция 
// Test, которая в этом примере вызывается из DLL. В данном случае - указатель
// на функцию, возвращающую LPSTR, и принимающую void. Для удобства
// дальнейшего использования создается тип такого указателя, имеющий имя PFN.

typedef  LPSTR  (*pfn) (void);



/* Приложение, выполняющее явное связывание DLL, должно выполнить следующий
   цикл действий:
   - загрузка DLL (через LoadLibrary())
   - получения адреса нужной функции (через GetProcAddress())
   - выгрузка DLL (через FreeLibrary())

*/

WINAPI WinMain (HINSTANCE, HINSTANCE, LPSTR, int)
{
   // Загрузка DLL с именем TESTDLL.DLL в адресное пространство процесса
   // Переменная hMod является дескриптором  DLL

   HMODULE hMod = LoadLibrary ("testdll.dll");

   // Если дескриптор загруженной DLL = NULL, значит загрузка не удалась
   if (!hMod)
      return MessageBox (NULL, "Ошибка загрузки testdll.dll!\n", "ОШИБКА!", MB_OK | MB_ICONEXCLAMATION);


   /* Получение адреса функции. Из DLL с дескриптором hMod, т.е. в данном
      случае TESTDLL.DLL получается адрес функции с именем _Test с учетом
      особенностей внутреннего имени функции в DLL (см. TESTDLL.CPP).
      Адрес, по которому расположена функция, заносится в переменную ADDR.
   */
   pfn addr = (pfn)GetProcAddress (hMod, "_Test");

   // Если получен нулевой адрес, значит функция с таким именем не найдена
   // или отсутствует в DLL
   if (!addr)
      return MessageBox (NULL, "Ошибка получения адреса функции!\n", "ОШИБКА!", MB_OK | MB_ICONEXCLAMATION);


   // Вызов функции по ее адресу и получение строки, которую возвращает Test()
   LPSTR str = (*addr)();

   // Дополнительная проверка на косяк
   if (!str)
      return MessageBox (NULL, "Получена пустая строка!\n", "ОШИБКА!", MB_OK | MB_ICONEXCLAMATION);

   // Вывод строки на экран как демонстрация успешного вызова  функции 
   // Test() из библиотеки TESTDLL.DLL
   MessageBox (NULL, str, "Вызов из DLL!", MB_OK | MB_ICONEXCLAMATION);

   // Выгрузка более не нужной библиотеки TESTDLL.DLL
   FreeLibrary (hMod);

   return 0;    // Успешное завершение программы
}

